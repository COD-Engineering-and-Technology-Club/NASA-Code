#!/usr/bin/python3

import XboxController
import time
import socket

"""Packet Meanings:
	DR = Drive
	ST = Steer
	AU = Auger
	TI = Tilt(Actuators)
	SL = Slide Rails"""

if __name__ == '__main__':
	
	HOST='192.168.1.125'
	PORT=9500
	s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((HOST, PORT))
	

	xboxCont = XboxController.XboxController(
		controllerCallBack = None,
		joystickNo = 0,
		deadzone = 0.5,
		scale = 1,
		invertYAxis = False)

	def ltxCall(val):
		"""pwm takes val from -1 to 1
		and changes it from 1 to 100
		for GPIO ChangeDutyCycle"""
		pwm = (val + 1)/.02
		pwm = round(pwm,0)
		msg = "ST"+str(pwm)
		print(msg)
		data = msg.encode()
		s.send(data)
		return 0

	def ltyCall(aValue):
		pwm = (val + 1)/.02
                pwm = round(pwm,0)
                msg = "DR"+str(pwm)
                print(msg)
                data = msg.encode()
                s.send(data)
                return 0

		return 0

	def rtxCall(val):
		return 0
		pwm = (val + 1)/.02
		pwm = round(pwm,0)
		msg = ""+str(pwm)
		print(msg)
		send = msg.encode()
		s.send(send)

	def rtyCall(aValue):
		return 0

	def rtrCall(val):        
		pwm = (val + 1)/.02
		pwm = round(pwm,0)
		msg = "DR"+str(pwm)
		print(msg)
		send = msg.encode()
		s.send(send)
		return 0

	def ltrCall(aValue):        
		return 0
    
	def aCall(aValue):
		pwm = (val + 1)/.02
		pwm = round(pwm,0)
		msg = "AU"+str(pwm)
		print(msg)
		send = msg.encode()
		s.send(send)
		return 0

	def bCall(val):        
		return 0
    
	def xCall(aValue):        
		return 0
    
	def yCall(aValue):        
		return 0
    
	def lbCall(aValue):        
		return 0
    
	def rbCall(aValue):        
		return 0
    
	def bckCall(aValue):        
		return 0
    
	def strCall(aValue):        
		return 0
    
	def xbCall(aValue):        
		return 0
    
	def ltCall(aValue):        
		return 0
    
	def rtCall(aValue):        
		return 0

	xboxCont.setupControlCallback(xboxCont.XboxControls.LTHUMBX, ltxCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.LTHUMBY, ltyCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.RTHUMBX, rtxCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.RTHUMBY, rtyCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.RTRIGGER, rtrCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.LTRIGGER, ltrCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.A, aCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.B, bCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.X, xCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.Y, yCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.LB, lbCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.RB, rbCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.BACK, bckCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.START, strCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.XBOX, xbCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.LEFTTHUMB, ltCall)
	xboxCont.setupControlCallback(xboxCont.XboxControls.RIGHTTHUMB, rtCall)

	try:
		xboxCont.start()
		print("WEEOOOHWEEEOHH")
		#How long you want before it asks for new info from xbox
		while True:
			time.sleep(.05)

	except KeyboardInterrupt:
		print("User cancelled")
	except:
		print("Unexpected error: "), sys.exc_info()[0]
		raise
	finally:
		xboxCont.stop()
		exit(0)
		s.close()
